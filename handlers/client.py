from aiogram import types, Dispatcher
from create_bot import dp, bot
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, KeyboardButton
from db import models
from db.models import *

urlkb = InlineKeyboardMarkup(row_width=1)
urlButton = InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞üá¨üá™', url='http://212.192.31.65/')
urlkb.add(urlButton)


# @dp.message_handler(commands=['start', 'help'])
async def send_welcome(message: types.Message):
    kb = [
        [
            types.KeyboardButton(text="–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª"),
            types.KeyboardButton(text="–ú–µ–Ω—é"),
            types.KeyboardButton(text="–ö–æ–Ω—Ç–∞–∫—Ç—ã"),
            types.KeyboardButton(text='–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã'),
            types.KeyboardButton(text='–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ'),

        ],
    ]
    keyboard = types.ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True).add(urlButton)

    await message.reply(f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!üëã –Ø –ì–∞–º–∞—Ä–¥–∂–æ–±–∞-–±–æ—Ç –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–æ–ª–∏–∫–æ–≤ –≤ '
                        f'—Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ –ì–∞–º–∞—Ä–¥–∂–æ–±–∞–ì–µ–Ω–∞—Ü–≤–∞–ª–µüá¨üá™', reply_markup=keyboard)


# @dp.message_handler()
async def commands(message: types.Message):
    kbs =[
        [
            types.KeyboardButton(text='–ë–ª—é–¥–∞ –∏–∑ –ø–µ—á–∏'),
            types.KeyboardButton(text='–°–∞–ª–∞—Ç—ã'),
            types.KeyboardButton(text='–ì–æ—Ä—è—á–∏–µ –±–ª—é–¥–∞'),
        ],
    ]
    but1 = KeyboardButton(text='–°—É–ø—ã')
    but2 = KeyboardButton(text='–ì–∞—Ä–Ω–∏—Ä—ã')
    but3 = KeyboardButton(text='–°–æ—É—Å—ã')
    but4 = KeyboardButton(text='–•–∏–Ω–∫–∞–ª–∏')
    but5 = KeyboardButton(text='–ù–∞–ø–∏—Ç–∫–∏')
    but6 = KeyboardButton(text='–î–µ—Å–µ—Ä—Ç—ã')
    but7 = KeyboardButton(text='–ë–ª—é–¥–∞ –Ω–∞ –º–∞–Ω–≥–∞–ª–µ')
    but8 = KeyboardButton(text='–ó–∞–∫—É—Å–∫–∏')
    but9 = KeyboardButton(text='/start')
    keyboard = types.ReplyKeyboardMarkup(keyboard=kbs, resize_keyboard=True).add(but7, but8, but1, but2, but3, but4, but5, but6, but9)
    if message.text == '–ö–æ–Ω—Ç–∞–∫—Ç—ã':
        await message.reply('–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: @kgf_kamil')
    elif message.text == '–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã':
        await message.reply('–ü–Ω-–ß—Ç —Å 11:00 –¥–æ 23:00, –ü—Ç-–í—Å —Å 11:00 –¥–æ 00:00')
    elif message.text == '–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ':
        await message.reply('–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ü—É—à–∫–∏–Ω–∞, –¥. –ö–æ–ª–æ—Ç—É—à–∫–∏–Ω–∞ 66')
    elif message.text == '–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞üá¨üá™':
        await message.reply('–í—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –ø–æ —Å—Å—ã–ª–∫–µ: gamarjoba.sytes.net')
    elif message.text == '–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª':
        await message.reply('üóì–ö–æ–≥–¥–∞ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ø–æ—Å–µ—Ç–∏—Ç—å –Ω–∞—à —Ä–µ—Å—Ç–æ—Ä–∞–Ω?\n–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD')
    elif message.text == '–ú–µ–Ω—é':
        await message.reply(psql_read(), reply_markup=keyboard)
    elif message.text == '–ë–ª—é–¥–∞ –∏–∑ –ø–µ—á–∏':
        await message.reply(psql_read_pechka())
    elif message.text == '–°–∞–ª–∞—Ç—ã':
        await message.reply(psql_read_salati())
    elif message.text == '–ì–æ—Ä—è—á–∏–µ –±–ª—é–¥–∞':
        await message.reply(psql_read_goryachee())
    elif message.text == '–ë–ª—é–¥–∞ –Ω–∞ –º–∞–Ω–≥–∞–ª–µ':
        await message.reply(psql_read_mangal())
    elif message.text == '–ó–∞–∫—É—Å–∫–∏':
        await message.reply(psql_read_zakuski())
    elif message.text == '–°—É–ø—ã':
        await message.reply(psql_read_soup())
    elif message.text == '–ì–∞—Ä–Ω–∏—Ä—ã':
        await message.reply(psql_read_garnir())
    elif message.text == '–°–æ—É—Å—ã':
        await message.reply(psql_read_sous())
    elif message.text == '–•–∏–Ω–∫–∞–ª–∏':
        await message.reply(psql_read_hinkali())
    elif message.text == '–ù–∞–ø–∏—Ç–∫–∏':
        await message.reply(psql_read_napitki())
    elif message.text == '–î–µ—Å–µ—Ä—Ç—ã':
        await message.reply(psql_read_desert())


def register_handlers_client(dp : Dispatcher):
    dp.register_message_handler(send_welcome, commands=['start', 'help'])
    dp.register_message_handler(commands)